/// <reference types="node" />
import { ParsedUrlQuery } from "querystring";
import { GetServerSideProps, GetServerSidePropsContext, GetStaticProps, GetStaticPropsContext, Redirect } from "next/types";
declare type Props = Record<string, any>;
declare type Context = GetStaticPropsContext<ParsedUrlQuery> | GetServerSidePropsContext<ParsedUrlQuery>;
export declare function composeProps(...fns: (GetStaticProps | GetServerSideProps)[]): <T extends GetStaticProps<{
    [key: string]: any;
}, ParsedUrlQuery> | GetServerSideProps<{
    [key: string]: any;
}, ParsedUrlQuery>>(context: Context) => Promise<Partial<{
    redirect: Redirect;
}> | Partial<{
    props: Props;
}> | {
    notFound: true;
}>;
export {};
